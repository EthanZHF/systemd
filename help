`configure' configures systemd 229 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/bin', `/usr/lib' etc.  You can specify
an installation prefix other than `/usr' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/systemd]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-largefile     omit support for large files
  --disable-maintainer-mode
                          disable make rules and dependencies not useful (and
                          sometimes confusing) to the casual installer
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-static[=PKGS]  build static libraries [default=no]
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-nls           do not use Native Language Support
  --enable-address-sanitizer
                          enable -fsanitize=address
  --enable-undefined-sanitizer
                          enable -fsanitize=undefined
  --disable-dbus          disable usage of dbus-1 in tests
  --disable-utmp          disable utmp/wtmp log handling
  --enable-compat-libs    Enable creation of compatibility libraries
  --enable-coverage       enable test coverage
  --disable-kmod          disable loadable modules support
  --disable-xkbcommon     disable xkbcommon keymap support
  --disable-blkid         disable blkid support
  --disable-seccomp       Disable optional SECCOMP support
  --disable-ima           Disable optional IMA support
  --disable-selinux       Disable optional SELINUX support
  --disable-apparmor      Disable optional AppArmor support
  --disable-xz            Disable optional XZ support
  --disable-zlib          Disable optional ZLIB support
  --enable-bzip2          Enable optional BZIP2 support
  --disable-lz4           Disable optional LZ4 support
  --disable-pam           Disable optional PAM support
  --disable-acl           Disable optional ACL support
  --disable-smack         Disable optional SMACK support
  --disable-gcrypt        Disable optional GCRYPT support
  --disable-audit         Disable optional AUDIT support
  --disable-elfutils      Disable optional ELFUTILS support
  --disable-libcryptsetup disable libcryptsetup tools
  --disable-qrencode      disable qrencode support
  --disable-gnutls        disable gnutls support
  --disable-microhttpd    disable microhttpd support
  --disable-libcurl       disable libcurl support
  --disable-libidn        Disable optional LIBIDN support
  --disable-libiptc       Disable optional LIBIPTC support
  --disable-binfmt        disable binfmt tool
  --disable-vconsole      disable vconsole tool
  --disable-bootchart     disable bootchart tool
  --disable-quotacheck    disable quotacheck tools
  --disable-tmpfiles      disable tmpfiles support
  --disable-sysusers      disable sysusers support
  --disable-firstboot     disable firstboot support
  --disable-randomseed    disable randomseed tools
  --disable-backlight     disable backlight tools
  --disable-rfkill        disable rfkill tools
  --disable-logind        disable login daemon
  --disable-machined      disable machine daemon
  --disable-importd       disable import daemon
  --disable-hostnamed     disable hostname daemon
  --disable-timedated     disable timedate daemon
  --disable-timesyncd     disable timesync daemon
  --disable-localed       disable locale daemon
  --disable-coredump      disable coredump hook
  --disable-polkit        disable PolicyKit support
  --disable-resolved      disable resolve daemon
  --disable-networkd      disable networkd
  --disable-efi           disable EFI support
  --enable-gnuefi         Enable optional gnuefi support
  --disable-kdbus         do not connect to kdbus by default
  --disable-myhostname    disable nss-myhostname support
  --disable-hwdb          disable hardware database support
  --disable-manpages      disable manpages
  --disable-hibernate     disable hibernation support
  --disable-ldconfig      disable ldconfig
  --enable-split-usr      Assume that /bin, /sbin aren\'t symlinks into /usr
  --disable-tests         disable tests
  --enable-debug[=LIST]   enable extra debugging (hashmap,mmap-cache)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --without-python        Disable building the man page index and
                          systemd-python (default: test)
  --with-debug-shell=PATH Path to debug shell binary
  --with-debug-tty=PATH   Specify the tty device for debug shell
  --with-certificate-root=PATH
                          Specify the prefix for TLS certificates [/etc/ssl]
  --with-smack-run-label=STRING
                          run systemd --system itself with a specific SMACK
                          label
  --with-smack-default-process-label=STRING
                          default SMACK label for executed processes
  --with-libgcrypt-prefix=PFX
                          prefix where LIBGCRYPT is installed (optional)
  --with-libgpg-error-prefix=PFX
                          prefix where GPG Error is installed (optional)

  --with-ntp-servers=NTPSERVERS
                          Space-separated list of default NTP servers
  --with-time-epoch=SECONDS
                          Time epoch for time clients
  --with-system-uid-max=UID
                Maximum UID for system users

  --with-system-gid-max=GID
                Maximum GID for system groups

  --with-dns-servers=DNSSERVERS
                          Space-separated list of default DNS servers
  --with-efi-libdir=PATH  Path to EFI lib directory
  --with-efi-ldsdir=PATH  Path to EFI lds directory
  --with-efi-includedir=PATH
                          Path to EFI include directory
  --with-rc-local-script-path-start=PATH
                          Path to /etc/rc.local
  --with-rc-local-script-path-stop=PATH
                          Path to /usr/sbin/halt.local
  --with-kbd-loadkeys=PATH
                          Path to loadkeys
  --with-kbd-setfont=PATH Path to setfont
  --with-telinit=PATH     Path to telinit
  --with-sysvinit-path=PATH
                          Specify the path to where the SysV init scripts are
                          located
  --with-sysvrcnd-path=PATH
                          Specify the path to the base directory for the SysV
                          rcN.d directories
  --with-tty-gid=GID      Specify the numeric GID of the 'tty' group
  --with-dbuspolicydir=DIR
                          D-Bus policy directory
  --with-dbussessionservicedir=DIR
                          D-Bus session service directory
  --with-dbussystemservicedir=DIR
                          D-Bus system service directory
  --with-bashcompletiondir=DIR
                          Bash completions directory
  --with-zshcompletiondir=DIR
                          Zsh completions directory
  --with-rootprefix=DIR   rootfs directory prefix for config files and kernel
                          modules
  --with-rootlibdir=DIR   Root directory for libraries necessary for boot
  --with-pamlibdir=DIR    Directory for PAM modules
  --with-pamconfdir=DIR   Directory for PAM configuration

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  PYTHON      the Python interpreter
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  DBUS_CFLAGS C compiler flags for DBUS, overriding pkg-config
  DBUS_LIBS   linker flags for DBUS, overriding pkg-config
  KMOD_CFLAGS C compiler flags for KMOD, overriding pkg-config
  KMOD_LIBS   linker flags for KMOD, overriding pkg-config
  XKBCOMMON_CFLAGS
              C compiler flags for XKBCOMMON, overriding pkg-config
  XKBCOMMON_LIBS
              linker flags for XKBCOMMON, overriding pkg-config
  BLKID_CFLAGS
              C compiler flags for BLKID, overriding pkg-config
  BLKID_LIBS  linker flags for BLKID, overriding pkg-config
  MOUNT_CFLAGS
              C compiler flags for MOUNT, overriding pkg-config
  MOUNT_LIBS  linker flags for MOUNT, overriding pkg-config
  SECCOMP_CFLAGS
              C compiler flags for SECCOMP, overriding pkg-config
  SECCOMP_LIBS
              linker flags for SECCOMP, overriding pkg-config
  SELINUX_CFLAGS
              C compiler flags for SELINUX, overriding pkg-config
  SELINUX_LIBS
              linker flags for SELINUX, overriding pkg-config
  APPARMOR_CFLAGS
              C compiler flags for APPARMOR, overriding pkg-config
  APPARMOR_LIBS
              linker flags for APPARMOR, overriding pkg-config
  XZ_CFLAGS   C compiler flags for XZ, overriding pkg-config
  XZ_LIBS     linker flags for XZ, overriding pkg-config
  ZLIB_CFLAGS C compiler flags for ZLIB, overriding pkg-config
  ZLIB_LIBS   linker flags for ZLIB, overriding pkg-config
  LZ4_CFLAGS  C compiler flags for LZ4, overriding pkg-config
  LZ4_LIBS    linker flags for LZ4, overriding pkg-config
  LIBCRYPTSETUP_CFLAGS
              C compiler flags for LIBCRYPTSETUP, overriding pkg-config
  LIBCRYPTSETUP_LIBS
              linker flags for LIBCRYPTSETUP, overriding pkg-config
  QRENCODE_CFLAGS
              C compiler flags for QRENCODE, overriding pkg-config
  QRENCODE_LIBS
              linker flags for QRENCODE, overriding pkg-config
  GNUTLS_CFLAGS
              C compiler flags for GNUTLS, overriding pkg-config
  GNUTLS_LIBS linker flags for GNUTLS, overriding pkg-config
  MICROHTTPD_CFLAGS
              C compiler flags for MICROHTTPD, overriding pkg-config
  MICROHTTPD_LIBS
              linker flags for MICROHTTPD, overriding pkg-config
  LIBCURL_CFLAGS
              C compiler flags for LIBCURL, overriding pkg-config
  LIBCURL_LIBS
              linker flags for LIBCURL, overriding pkg-config
  LIBIDN_CFLAGS
              C compiler flags for LIBIDN, overriding pkg-config
  LIBIDN_LIBS linker flags for LIBIDN, overriding pkg-config
  LIBIPTC_CFLAGS
              C compiler flags for LIBIPTC, overriding pkg-config
  LIBIPTC_LIBS
              linker flags for LIBIPTC, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <http://github.com/systemd/systemd/issues>.
systemd home page: <http://www.freedesktop.org/wiki/Software/systemd>.
