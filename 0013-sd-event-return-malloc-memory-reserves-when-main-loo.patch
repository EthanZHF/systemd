From 8b9fb70d9fb83899f1c2bdd9aa936754f2ef810f Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:47:18 +0100
Subject: [PATCH 13/30] sd-event: return malloc() memory reserves when main
 loop is idle.

---
 src/libsystemd/sd-event/sd-event.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/libsystemd/sd-event/sd-event.c b/src/libsystemd/sd-event/sd-event.c
index 700ac69..72d171c 100644
--- a/src/libsystemd/sd-event/sd-event.c
+++ b/src/libsystemd/sd-event/sd-event.c
@@ -22,6 +22,7 @@
 #include <sys/epoll.h>
 #include <sys/timerfd.h>
 #include <sys/wait.h>
+#include <malloc.h>
 
 #include "sd-daemon.h"
 #include "sd-event.h"
@@ -2620,9 +2621,17 @@ _public_ int sd_event_run(sd_event *e, uint64_t timeout) {
         assert_return(e->state == SD_EVENT_INITIAL, -EBUSY);
 
         r = sd_event_prepare(e);
-        if (r == 0)
-                /* There was nothing? Then wait... */
+        if (r == 0) {
+                /* There was nothing? Then wait...
+                 *
+                 * ... but since there is no event pending, likely
+                 * we'll be idle for a long time.  This is a good time
+                 * to return any malloc() memory reserves to the
+                 * operating system.
+                 */
+                malloc_trim(0);
                 r = sd_event_wait(e, timeout);
+        }
 
         if (r > 0) {
                 /* There's something now, then let's dispatch it */
-- 
2.8.1

