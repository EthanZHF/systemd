commit 052c57f132f04a3cf4148f87561618da1a6908b4
Author: Zbigniew JÄ™drzejewski-Szmek <zbyszek@in.waw.pl>
Date:   Wed Dec 5 22:45:02 2018 +0100

    journald: set a limit on the number of fields (1k)
    
    We allocate a iovec entry for each field, so with many short entries,
    our memory usage and processing time can be large, even with a relatively
    small message size. Let's refuse overly long entries.
    
    CVE-2018-16865
    https://bugzilla.redhat.com/show_bug.cgi?id=1653861
    
    What from I can see, the problem is not from an alloca, despite what the CVE
    description says, but from the attack multiplication that comes from creating
    many very small iovecs: (void* + size_t) for each three bytes of input message.

diff --git a/src/journal/journald-native.c b/src/journal/journald-native.c
index e86178ed77..d0fee2a797 100644
--- a/src/journal/journald-native.c
+++ b/src/journal/journald-native.c
@@ -141,6 +141,11 @@ static int server_process_entry(
                 }
 
                 /* A property follows */
+                if (n > 1024) {
+                        log_debug("Received an entry that has more than " STRINGIFY(1024) " fields, ignoring entry.");
+                        r = 1;
+                        goto finish;
+                }
 
                 /* n existing properties, 1 new, +1 for _TRANSPORT */
                 if (!GREEDY_REALLOC(iovec, m,
